// Generated from MiniFSHLexer.g4 by ANTLR 4.9.3
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\t\u0089\b\u0001\b\u0001\u0004\u0002\t\u0002\u0004\u0003",
    "\t\u0003\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006",
    "\u0004\u0007\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b",
    "\t\u000b\u0004\f\t\f\u0003\u0002\u0003\u0002\u0005\u0002\u001d\n\u0002",
    "\u0003\u0002\u0007\u0002 \n\u0002\f\u0002\u000e\u0002#\u000b\u0002\u0003",
    "\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0007\u00034\n\u0003\f\u0003\u000e\u0003",
    "7\u000b\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0007\u0004@\n\u0004\f\u0004\u000e\u0004",
    "C\u000b\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0005\u0006\u0005J\n\u0005\r\u0005\u000e\u0005K\u0003\u0006\u0003\u0006",
    "\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0003\n\u0003\n\u0003\n\u0003\n\u0007\n\\\n\n\f\n\u000e\n_\u000b",
    "\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b",
    "\u0003\u000b\u0007\u000bi\n\u000b\f\u000b\u000e\u000bl\u000b\u000b\u0003",
    "\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\f\u0007\fs\n\f\f\f",
    "\u000e\fv\u000b\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003",
    "\f\u0007\f\u007f\n\f\f\f\u000e\f\u0082\u000b\f\u0003\f\u0007\f\u0085",
    "\n\f\f\f\u000e\f\u0088\u000b\f\u0003A\u0002\r\u0004\u0003\u0006\u0004",
    "\b\u0005\n\u0006\f\u0002\u000e\u0002\u0010\u0002\u0012\u0007\u0014\b",
    "\u0016\t\u0018\u0002\u0004\u0002\u0003\b\u0004\u0002\f\f\u000f\u000f",
    "\u0004\u0002\"\"\u00a2\u00a2\u0004\u0002$$^^\u0006\u0002\u000b\f\u000e",
    "\u000f\"\"\u00a2\u00a2\b\u0002\u000b\f\u000e\u000f\"\"$$^^\u00a2\u00a2",
    "\u0004\u0002++..\u0002\u0095\u0002\u0004\u0003\u0002\u0002\u0002\u0002",
    "\u0006\u0003\u0002\u0002\u0002\u0002\b\u0003\u0002\u0002\u0002\u0002",
    "\n\u0003\u0002\u0002\u0002\u0002\u0012\u0003\u0002\u0002\u0002\u0002",
    "\u0014\u0003\u0002\u0002\u0002\u0003\u0016\u0003\u0002\u0002\u0002\u0004",
    "\u001c\u0003\u0002\u0002\u0002\u0006\'\u0003\u0002\u0002\u0002\b:\u0003",
    "\u0002\u0002\u0002\nI\u0003\u0002\u0002\u0002\fM\u0003\u0002\u0002\u0002",
    "\u000eO\u0003\u0002\u0002\u0002\u0010Q\u0003\u0002\u0002\u0002\u0012",
    "S\u0003\u0002\u0002\u0002\u0014W\u0003\u0002\u0002\u0002\u0016d\u0003",
    "\u0002\u0002\u0002\u0018t\u0003\u0002\u0002\u0002\u001a\u001d\t\u0002",
    "\u0002\u0002\u001b\u001d\u0005\u0014\n\u0002\u001c\u001a\u0003\u0002",
    "\u0002\u0002\u001c\u001b\u0003\u0002\u0002\u0002\u001d!\u0003\u0002",
    "\u0002\u0002\u001e \u0005\f\u0006\u0002\u001f\u001e\u0003\u0002\u0002",
    "\u0002 #\u0003\u0002\u0002\u0002!\u001f\u0003\u0002\u0002\u0002!\"\u0003",
    "\u0002\u0002\u0002\"$\u0003\u0002\u0002\u0002#!\u0003\u0002\u0002\u0002",
    "$%\u0007,\u0002\u0002%&\t\u0003\u0002\u0002&\u0005\u0003\u0002\u0002",
    "\u0002\'5\u0007$\u0002\u0002(4\n\u0004\u0002\u0002)*\u0007^\u0002\u0002",
    "*4\u0007t\u0002\u0002+,\u0007^\u0002\u0002,4\u0007p\u0002\u0002-.\u0007",
    "^\u0002\u0002.4\u0007v\u0002\u0002/0\u0007^\u0002\u000204\u0007$\u0002",
    "\u000212\u0007^\u0002\u000224\u0007^\u0002\u00023(\u0003\u0002\u0002",
    "\u00023)\u0003\u0002\u0002\u00023+\u0003\u0002\u0002\u00023-\u0003\u0002",
    "\u0002\u00023/\u0003\u0002\u0002\u000231\u0003\u0002\u0002\u000247\u0003",
    "\u0002\u0002\u000253\u0003\u0002\u0002\u000256\u0003\u0002\u0002\u0002",
    "68\u0003\u0002\u0002\u000275\u0003\u0002\u0002\u000289\u0007$\u0002",
    "\u00029\u0007\u0003\u0002\u0002\u0002:;\u0007$\u0002\u0002;<\u0007$",
    "\u0002\u0002<=\u0007$\u0002\u0002=A\u0003\u0002\u0002\u0002>@\u000b",
    "\u0002\u0002\u0002?>\u0003\u0002\u0002\u0002@C\u0003\u0002\u0002\u0002",
    "AB\u0003\u0002\u0002\u0002A?\u0003\u0002\u0002\u0002BD\u0003\u0002\u0002",
    "\u0002CA\u0003\u0002\u0002\u0002DE\u0007$\u0002\u0002EF\u0007$\u0002",
    "\u0002FG\u0007$\u0002\u0002G\t\u0003\u0002\u0002\u0002HJ\u0005\u000e",
    "\u0007\u0002IH\u0003\u0002\u0002\u0002JK\u0003\u0002\u0002\u0002KI\u0003",
    "\u0002\u0002\u0002KL\u0003\u0002\u0002\u0002L\u000b\u0003\u0002\u0002",
    "\u0002MN\t\u0005\u0002\u0002N\r\u0003\u0002\u0002\u0002OP\n\u0005\u0002",
    "\u0002P\u000f\u0003\u0002\u0002\u0002QR\n\u0006\u0002\u0002R\u0011\u0003",
    "\u0002\u0002\u0002ST\u0005\f\u0006\u0002TU\u0003\u0002\u0002\u0002U",
    "V\b\t\u0002\u0002V\u0013\u0003\u0002\u0002\u0002WX\u00071\u0002\u0002",
    "XY\u00071\u0002\u0002Y]\u0003\u0002\u0002\u0002Z\\\n\u0002\u0002\u0002",
    "[Z\u0003\u0002\u0002\u0002\\_\u0003\u0002\u0002\u0002][\u0003\u0002",
    "\u0002\u0002]^\u0003\u0002\u0002\u0002^`\u0003\u0002\u0002\u0002_]\u0003",
    "\u0002\u0002\u0002`a\t\u0002\u0002\u0002ab\u0003\u0002\u0002\u0002b",
    "c\b\n\u0003\u0002c\u0015\u0003\u0002\u0002\u0002de\u0007*\u0002\u0002",
    "ej\u0005\u0018\f\u0002fg\u0007.\u0002\u0002gi\u0005\u0018\f\u0002hf",
    "\u0003\u0002\u0002\u0002il\u0003\u0002\u0002\u0002jh\u0003\u0002\u0002",
    "\u0002jk\u0003\u0002\u0002\u0002km\u0003\u0002\u0002\u0002lj\u0003\u0002",
    "\u0002\u0002mn\u0007+\u0002\u0002no\u0003\u0002\u0002\u0002op\b\u000b",
    "\u0004\u0002p\u0017\u0003\u0002\u0002\u0002qs\u0005\f\u0006\u0002rq",
    "\u0003\u0002\u0002\u0002sv\u0003\u0002\u0002\u0002tr\u0003\u0002\u0002",
    "\u0002tu\u0003\u0002\u0002\u0002u\u0080\u0003\u0002\u0002\u0002vt\u0003",
    "\u0002\u0002\u0002wx\u0007^\u0002\u0002x\u007f\u0007+\u0002\u0002yz",
    "\u0007^\u0002\u0002z\u007f\u0007.\u0002\u0002{|\u0007^\u0002\u0002|",
    "\u007f\u0007^\u0002\u0002}\u007f\n\u0007\u0002\u0002~w\u0003\u0002\u0002",
    "\u0002~y\u0003\u0002\u0002\u0002~{\u0003\u0002\u0002\u0002~}\u0003\u0002",
    "\u0002\u0002\u007f\u0082\u0003\u0002\u0002\u0002\u0080~\u0003\u0002",
    "\u0002\u0002\u0080\u0081\u0003\u0002\u0002\u0002\u0081\u0086\u0003\u0002",
    "\u0002\u0002\u0082\u0080\u0003\u0002\u0002\u0002\u0083\u0085\u0005\f",
    "\u0006\u0002\u0084\u0083\u0003\u0002\u0002\u0002\u0085\u0088\u0003\u0002",
    "\u0002\u0002\u0086\u0084\u0003\u0002\u0002\u0002\u0086\u0087\u0003\u0002",
    "\u0002\u0002\u0087\u0019\u0003\u0002\u0002\u0002\u0088\u0086\u0003\u0002",
    "\u0002\u0002\u0010\u0002\u0003\u001c!35AK]jt~\u0080\u0086\u0005\u0002",
    "\u0003\u0002\b\u0002\u0002\u0006\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class MiniFSHLexer extends antlr4.Lexer {

    static grammarFileName = "MiniFSHLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE", "PARAMETER_LIST_MODE" ];
	static literalNames = [  ];
	static symbolicNames = [ null, "STAR", "STRING", "MULTILINE_STRING", "SEQUENCE", 
                          "WHITESPACE", "LINE_COMMENT", "PARAMETER_LIST" ];
	static ruleNames = [ "STAR", "STRING", "MULTILINE_STRING", "SEQUENCE", 
                      "WS", "NONWS", "NONWS_STR", "WHITESPACE", "LINE_COMMENT", 
                      "PARAMETER_LIST", "PARAMETER" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

MiniFSHLexer.EOF = antlr4.Token.EOF;
MiniFSHLexer.STAR = 1;
MiniFSHLexer.STRING = 2;
MiniFSHLexer.MULTILINE_STRING = 3;
MiniFSHLexer.SEQUENCE = 4;
MiniFSHLexer.WHITESPACE = 5;
MiniFSHLexer.LINE_COMMENT = 6;
MiniFSHLexer.PARAMETER_LIST = 7;

MiniFSHLexer.PARAMETER_LIST_MODE = 1;




